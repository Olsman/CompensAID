% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/WithinLimit.R
\name{WithinLimit}
\alias{WithinLimit}
\title{Detect if smaller peaks need included for density-based cut-off detection.}
\usage{
WithinLimit(
  population,
  og,
  primary,
  secondary,
  min = 10,
  max = 90,
  si.input,
  sd.input,
  co.input
)
}
\arguments{
\item{population}{(list) List with the negative population of the primary and secondary marker, and positive population of the primary marker.}

\item{og}{(FlowFrame): FlowFrame containing the expression matrix, channel names, and marker names.}

\item{primary}{(character): Name of the primary channel.}

\item{secondary}{(character): Name of the secondary channel.}

\item{min}{(numerical): Minimum percentage of events required.}

\item{max}{(numerical): Maximum percentage of events required.}

\item{si.input}{(dataFrame): dataFrame containing SSI info.}

\item{sd.input}{(numerical): Numerical value determining the distance between the primary negative and positive population.}

\item{co.input}{(dataFrame) dataFrame with the output of the density-based cut-off detection.}
}
\value{
(list) Returns a list with the adjusted cutoffs and update secondary stain index information dataFrame.
}
\description{
Detect if smaller peaks need included for density-based cut-off detection.
}
\examples{
# Import FCS file
file <- flowCore::read.FCS(system.file("extdata", "68983.fcs", package = "compensAID"))

# Obtain all possible marker combinations
mc <- GetMarkerCombinations(og = file)

# Density-based cut-off detection
center.plot <- 2
co <- DensityGating(og = file,
                    cp.value = center.plot)

# Empty SSI(-info) matrix/dataFrame
range.value <- 4
separation.distance <- 0.25
sm <- EmptyMatrix(og = file)
si <- EmptyMatrixInfo(og = file,
                      rv.input = range.value,
                      mc.input = mc,
                      co.input = co,
                      sd.input = separation.distance)

# Gating positive and negative population
primary.marker <- "CD19"
secondary.marker <- "CD3"
pop <- GetPopulations(og = file,
                      primary = primary.marker,
                      secondary = secondary.marker,
                      co.input = co,
                      sd.input = separation.distance)

# Adjust limits
pop.limit <- WithinLimit(population = pop,
                         og = file,
                         primary = primary.marker,
                         secondary = secondary.marker,
                         min = 10,
                         max = 90,
                         si.input = si,
                         sd.input = separation.distance,
                         co.input = co)

}
\seealso{
\code{\link{CompensAID}}, \code{\link{EmptyMatrixInfo}}, \code{\link{DensityGating}}
}
